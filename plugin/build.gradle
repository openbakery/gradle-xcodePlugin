import org.gradle.api.publish.maven.MavenPublication

buildscript {
    repositories {
        jcenter()
    }
}

plugins {
  id "com.sarhanm.versioner" version "1.0.65.master.5f817fb"
}


group = 'org.icecrystal23'


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'maven'


sourceCompatibility = "1.6"
targetCompatibility = "1.6" 


dependencies {
    compile gradleApi()
    compile localGroovy()
}


repositories {
    mavenCentral()
}

dependencies {
    testCompile 'org.testng:testng:6.+'
    testCompile 'org.gmock:gmock:0.8.+'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    compile 'commons-io:commons-io:2.4+'
    compile 'commons-configuration:commons-configuration:1.10+'
    compile 'commons-collections:commons-collections:3.2.+'
    compile 'org.apache.httpcomponents:httpclient:4.3+'
    compile 'org.apache.httpcomponents:httpmime:4.3+'
    compile 'org.pegdown:pegdown:1.4.+'
    compile 'ch.qos.logback:logback-core:1.1.+'

}

sourceSets.main.java.srcDirs = []
sourceSets.main.groovy.srcDirs += ["src/main/java"]

test {
    useTestNG()
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

publishing {
    repositories {
        maven {
            credentials {
                username 'deployment'
                password 'deployment'
            }
            if(project.version.endsWith('-SNAPSHOT')) {
                url 'http://master-repo.zillow.local/content/repositories/libs-snapshots-local'
                } else {
                    //Rhino Repo
                    //url 'http://repo-cache.zillow.local/release'
                    url 'http://master-repo.zillow.local/content/repositories/libs-releases-local'
                }
            }
        }
        publications {
            mavenJava(MavenPublication) {
                from components.java
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}