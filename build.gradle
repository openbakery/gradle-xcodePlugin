allprojects {
	apply plugin: 'java-gradle-plugin'
	apply plugin: 'groovy'
	apply plugin: "maven"

	def versionNumber = "0.24.3"


	if (project.hasProperty("versionNumber")) {
		versionNumber = project.versionNumber
	}
	if (project.hasProperty("versionSuffix")) {
		versionNumber += project.versionSuffix
	}
	if (project.hasProperty("buildNumber")) {
		versionNumber += "." + project.buildNumber
	}


	group = 'org.openbakery'
	version = versionNumber

	sourceCompatibility = "1.8"
	targetCompatibility = "1.8"

	repositories {
		mavenCentral()
		// Spock snapshots are available from the Sonatype OSS snapshot repository
		maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
	}


	dependencies {
		implementation localGroovy()
		implementation gradleApi()
		implementation 'commons-io:commons-io:2.11.0'
		implementation 'org.apache.commons:commons-lang3:3.12.0'
		implementation 'org.apache.commons:commons-configuration2:2.7'
		implementation 'commons-collections:commons-collections:3.2.2'
		implementation 'commons-codec:commons-codec:1.15'
		implementation 'org.codehaus.groovy:groovy-all:2.5.10'


		testImplementation('org.spockframework:spock-core:1.3-groovy-2.5') {
			exclude module: 'groovy-all'
		}

		testImplementation 'org.objenesis:objenesis:3.2'
		testImplementation 'cglib:cglib-nodep:3.3.0'
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
		testImplementation 'org.hamcrest:hamcrest-all:1.3'
		testImplementation gradleTestKit()
	}

}

def publish = false

if (project.hasProperty("publish")) {
	publish = true
}


project(':xcode-plugin') {
	dependencies {
		if (!publish) {
			implementation project(':libxcodebase')
			implementation project(':libxcode')
			implementation project(':libxcodetools')
		} else {
			compileOnly project(':libxcodebase')
			compileOnly project(':libxcode')
			compileOnly project(':libxcodetools')
		}
		testImplementation project(':libtest')
	}
}


project(':libxcode') {
	dependencies {
		implementation project(':libxcodebase')
		testImplementation project(':libtest')
	}
}

project(':libxcodetools') {
	dependencies {
		implementation project(':libxcodebase')
		implementation project(':libxcode')
		testImplementation project(':libtest')
	}
}


project(':libtest') {
	dependencies {
		implementation project(':libxcode')
		implementation project(':libxcodetools')
	}
}


